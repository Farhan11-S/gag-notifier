// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v6.31.0
// source: grow_api.proto

package grow_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message untuk item standar (gear, seeds, dll.)
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity float64 `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grow_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_grow_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_grow_api_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Message untuk respons yang berisi list of items
type StockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *StockResponse) Reset() {
	*x = StockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grow_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockResponse) ProtoMessage() {}

func (x *StockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grow_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockResponse.ProtoReflect.Descriptor instead.
func (*StockResponse) Descriptor() ([]byte, []int) {
	return file_grow_api_proto_rawDescGZIP(), []int{1}
}

func (x *StockResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// Message untuk respons telur
type EggResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eggs []*Item `protobuf:"bytes,1,rep,name=eggs,proto3" json:"eggs,omitempty"`
}

func (x *EggResponse) Reset() {
	*x = EggResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grow_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EggResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EggResponse) ProtoMessage() {}

func (x *EggResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grow_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EggResponse.ProtoReflect.Descriptor instead.
func (*EggResponse) Descriptor() ([]byte, []int) {
	return file_grow_api_proto_rawDescGZIP(), []int{2}
}

func (x *EggResponse) GetEggs() []*Item {
	if x != nil {
		return x.Eggs
	}
	return nil
}

// Message untuk respons cuaca (menggunakan Struct untuk data dinamis)
type WeatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weather *structpb.Struct `protobuf:"bytes,1,opt,name=weather,proto3" json:"weather,omitempty"`
}

func (x *WeatherResponse) Reset() {
	*x = WeatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grow_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherResponse) ProtoMessage() {}

func (x *WeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grow_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherResponse.ProtoReflect.Descriptor instead.
func (*WeatherResponse) Descriptor() ([]byte, []int) {
	return file_grow_api_proto_rawDescGZIP(), []int{3}
}

func (x *WeatherResponse) GetWeather() *structpb.Struct {
	if x != nil {
		return x.Weather
	}
	return nil
}

// Message untuk respons /alldata
type AllDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weather   *structpb.Struct `protobuf:"bytes,1,opt,name=weather,proto3" json:"weather,omitempty"`
	Gear      []*Item          `protobuf:"bytes,2,rep,name=gear,proto3" json:"gear,omitempty"`
	Seeds     []*Item          `protobuf:"bytes,3,rep,name=seeds,proto3" json:"seeds,omitempty"`
	Eggs      []*Item          `protobuf:"bytes,4,rep,name=eggs,proto3" json:"eggs,omitempty"`
	Honey     []*Item          `protobuf:"bytes,5,rep,name=honey,proto3" json:"honey,omitempty"` // Untuk eventshop
	Cosmetics []*Item          `protobuf:"bytes,6,rep,name=cosmetics,proto3" json:"cosmetics,omitempty"`
	Timestamp int64            `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *AllDataResponse) Reset() {
	*x = AllDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grow_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllDataResponse) ProtoMessage() {}

func (x *AllDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grow_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllDataResponse.ProtoReflect.Descriptor instead.
func (*AllDataResponse) Descriptor() ([]byte, []int) {
	return file_grow_api_proto_rawDescGZIP(), []int{4}
}

func (x *AllDataResponse) GetWeather() *structpb.Struct {
	if x != nil {
		return x.Weather
	}
	return nil
}

func (x *AllDataResponse) GetGear() []*Item {
	if x != nil {
		return x.Gear
	}
	return nil
}

func (x *AllDataResponse) GetSeeds() []*Item {
	if x != nil {
		return x.Seeds
	}
	return nil
}

func (x *AllDataResponse) GetEggs() []*Item {
	if x != nil {
		return x.Eggs
	}
	return nil
}

func (x *AllDataResponse) GetHoney() []*Item {
	if x != nil {
		return x.Honey
	}
	return nil
}

func (x *AllDataResponse) GetCosmetics() []*Item {
	if x != nil {
		return x.Cosmetics
	}
	return nil
}

func (x *AllDataResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RareItemNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemName  string  `protobuf:"bytes,1,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	Quantity  float64 `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Timestamp int64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Category  string  `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"` // "seeds", "gear", atau "eggs"
}

func (x *RareItemNotification) Reset() {
	*x = RareItemNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grow_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RareItemNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RareItemNotification) ProtoMessage() {}

func (x *RareItemNotification) ProtoReflect() protoreflect.Message {
	mi := &file_grow_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RareItemNotification.ProtoReflect.Descriptor instead.
func (*RareItemNotification) Descriptor() ([]byte, []int) {
	return file_grow_api_proto_rawDescGZIP(), []int{5}
}

func (x *RareItemNotification) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *RareItemNotification) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *RareItemNotification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RareItemNotification) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

var File_grow_api_proto protoreflect.FileDescriptor

var file_grow_api_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x35, 0x0a,
	0x0d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x0b, 0x45, 0x67, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x65, 0x67, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x65, 0x67, 0x67, 0x73, 0x22, 0x44, 0x0a, 0x0f, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x22, 0xa4, 0x02,
	0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x67, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x67, 0x65, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x65, 0x65, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x73, 0x65, 0x65, 0x64, 0x73, 0x12, 0x22,
	0x0a, 0x04, 0x65, 0x67, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x65, 0x67,
	0x67, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x68, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x68, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x6d,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72,
	0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x63, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x32, 0xa5, 0x04, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x77, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x6f, 0x77,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x47, 0x65, 0x61, 0x72, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x45, 0x67, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x67,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x19, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x20, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x52, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x67, 0x72,
	0x6f, 0x77, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grow_api_proto_rawDescOnce sync.Once
	file_grow_api_proto_rawDescData = file_grow_api_proto_rawDesc
)

func file_grow_api_proto_rawDescGZIP() []byte {
	file_grow_api_proto_rawDescOnce.Do(func() {
		file_grow_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_grow_api_proto_rawDescData)
	})
	return file_grow_api_proto_rawDescData
}

var file_grow_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_grow_api_proto_goTypes = []interface{}{
	(*Item)(nil),                 // 0: grow_api.Item
	(*StockResponse)(nil),        // 1: grow_api.StockResponse
	(*EggResponse)(nil),          // 2: grow_api.EggResponse
	(*WeatherResponse)(nil),      // 3: grow_api.WeatherResponse
	(*AllDataResponse)(nil),      // 4: grow_api.AllDataResponse
	(*RareItemNotification)(nil), // 5: grow_api.RareItemNotification
	(*structpb.Struct)(nil),      // 6: google.protobuf.Struct
	(*emptypb.Empty)(nil),        // 7: google.protobuf.Empty
}
var file_grow_api_proto_depIdxs = []int32{
	0,  // 0: grow_api.StockResponse.items:type_name -> grow_api.Item
	0,  // 1: grow_api.EggResponse.eggs:type_name -> grow_api.Item
	6,  // 2: grow_api.WeatherResponse.weather:type_name -> google.protobuf.Struct
	6,  // 3: grow_api.AllDataResponse.weather:type_name -> google.protobuf.Struct
	0,  // 4: grow_api.AllDataResponse.gear:type_name -> grow_api.Item
	0,  // 5: grow_api.AllDataResponse.seeds:type_name -> grow_api.Item
	0,  // 6: grow_api.AllDataResponse.eggs:type_name -> grow_api.Item
	0,  // 7: grow_api.AllDataResponse.honey:type_name -> grow_api.Item
	0,  // 8: grow_api.AllDataResponse.cosmetics:type_name -> grow_api.Item
	7,  // 9: grow_api.GrowAPIService.GetAllData:input_type -> google.protobuf.Empty
	7,  // 10: grow_api.GrowAPIService.GetGear:input_type -> google.protobuf.Empty
	7,  // 11: grow_api.GrowAPIService.GetSeeds:input_type -> google.protobuf.Empty
	7,  // 12: grow_api.GrowAPIService.GetCosmetics:input_type -> google.protobuf.Empty
	7,  // 13: grow_api.GrowAPIService.GetEventShop:input_type -> google.protobuf.Empty
	7,  // 14: grow_api.GrowAPIService.GetEggs:input_type -> google.protobuf.Empty
	7,  // 15: grow_api.GrowAPIService.GetWeather:input_type -> google.protobuf.Empty
	7,  // 16: grow_api.GrowAPIService.SubscribeToRareItemNotifications:input_type -> google.protobuf.Empty
	4,  // 17: grow_api.GrowAPIService.GetAllData:output_type -> grow_api.AllDataResponse
	1,  // 18: grow_api.GrowAPIService.GetGear:output_type -> grow_api.StockResponse
	1,  // 19: grow_api.GrowAPIService.GetSeeds:output_type -> grow_api.StockResponse
	1,  // 20: grow_api.GrowAPIService.GetCosmetics:output_type -> grow_api.StockResponse
	1,  // 21: grow_api.GrowAPIService.GetEventShop:output_type -> grow_api.StockResponse
	2,  // 22: grow_api.GrowAPIService.GetEggs:output_type -> grow_api.EggResponse
	3,  // 23: grow_api.GrowAPIService.GetWeather:output_type -> grow_api.WeatherResponse
	5,  // 24: grow_api.GrowAPIService.SubscribeToRareItemNotifications:output_type -> grow_api.RareItemNotification
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_grow_api_proto_init() }
func file_grow_api_proto_init() {
	if File_grow_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grow_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grow_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grow_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EggResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grow_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grow_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grow_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RareItemNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grow_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grow_api_proto_goTypes,
		DependencyIndexes: file_grow_api_proto_depIdxs,
		MessageInfos:      file_grow_api_proto_msgTypes,
	}.Build()
	File_grow_api_proto = out.File
	file_grow_api_proto_rawDesc = nil
	file_grow_api_proto_goTypes = nil
	file_grow_api_proto_depIdxs = nil
}
